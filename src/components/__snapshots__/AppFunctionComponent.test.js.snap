// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AppFunctionComponent />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h2>
          Gift Giver
</h2>,
        <Unknown
          active={false}
          disabled={false}
          id="add-gift-button"
          onClick={[Function]}
          variant="primary"
>
          Add Gift
</Unknown>,
        <div
          id="gift-list"
>
          
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Gift Giver",
        },
        "ref": null,
        "rendered": "Gift Giver",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "active": false,
          "children": "Add Gift",
          "disabled": false,
          "id": "add-gift-button",
          "onClick": [Function],
          "variant": "primary",
        },
        "ref": null,
        "rendered": "Add Gift",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": Object {
            "active": false,
            "disabled": false,
            "variant": "primary",
          },
          "displayName": "Button",
          "render": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [],
          "id": "gift-list",
        },
        "ref": null,
        "rendered": Array [],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2>
            Gift Giver
</h2>,
          <Unknown
            active={false}
            disabled={false}
            id="add-gift-button"
            onClick={[Function]}
            variant="primary"
>
            Add Gift
</Unknown>,
          <div
            id="gift-list"
>
            
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Gift Giver",
          },
          "ref": null,
          "rendered": "Gift Giver",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "active": false,
            "children": "Add Gift",
            "disabled": false,
            "id": "add-gift-button",
            "onClick": [Function],
            "variant": "primary",
          },
          "ref": null,
          "rendered": "Add Gift",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "active": false,
              "disabled": false,
              "variant": "primary",
            },
            "displayName": "Button",
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "id": "gift-list",
          },
          "ref": null,
          "rendered": Array [],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "disableLifecycleMethods": true,
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
